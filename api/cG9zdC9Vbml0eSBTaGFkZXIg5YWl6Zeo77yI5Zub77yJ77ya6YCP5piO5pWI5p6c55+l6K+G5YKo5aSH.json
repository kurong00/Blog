{"title":"Unity Shader 入门（四）：透明效果知识储备","date":"2017-11-17T16:00:00.000Z","thumbnail":"https://github.com/kurong00/blog/blob/master/thumbnail/shader4/shader4.png?raw=true","slug":"Unity Shader 入门（四）：透明效果知识储备","categories":["Shader"],"updated":"2019-05-01T01:49:24.178Z","content":"<h2 id=\"导语\">导语<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#导语\"></a></h2><p>首先一个问题：如果场景中有非常多的物体，彼此之间有互相遮挡的情况，那么这些物体是按照什么样的渲染顺序进行渲染的呢？</p>\n<h3 id=\"深度缓冲\">深度缓冲<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#深度缓冲\"></a></h3><p>实际上，由于深度缓存（z-buffer）的存在,不透明的物体在不考虑渲染顺序的情况下也可以正确的被渲染。深度缓冲是用来解决物体可见性的问题，基本思想是：根据深度缓存里的值判断这个物体距离摄像机的距离。开始渲染一个片元的时候，需要把它的深度值和已存在于深度缓存中的值作比较，如果它的值距离摄像机更远那么就不会被渲染到屏幕上。否则更新片元的深度值到深度缓存中。</p>\n<h2 id=\"透明效果\">透明效果<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#透明效果\"></a></h2><p>我们可以不关心不透明物体的渲染顺序，因为在深度测试中就可以测试出物体离摄像机的距离再判断是否写入颜色缓冲。但是对于不透明物体，就没这么简单了。想要达到半透明的效果，我们要利用透明度混合。</p>\n<h3 id=\"透明度混合\">透明度混合<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#透明度混合\"></a></h3><p>透明度混合要关闭深度写入。这是因为：假如一个半透明物体在一个不透明物体的前面，如果开启深度写入的话，距离摄像机更远的不透明物体就会被剔除，但是依照常理我们是可以透过半透明的物体看到不透明的物体。但是这就破坏了深度缓冲的机制，这是非常不好但是不得不做的折中方法，也因此使得渲染顺序变得非常重要。（注意：关闭深度写入，但是没有关闭深度测试）</p>\n<h3 id=\"渲染顺序\">渲染顺序<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#渲染顺序\"></a></h3><p>我们考虑两种情况：</p>\n<ol>\n<li>既有半透明物体也有不透明物体：我们先渲染所有的不透明物体再渲染半透明物体</li>\n<li>全是半透明物体：开启深度测试，关闭深度写入的情况下将半透明物体按照距离摄像机的远近从后往前渲染。<ul>\n<li>这里有一个小问题，深度缓冲中的值是像素级别的，而一个半透明物体很可能有非常多个像素，这么一来每一个像素的深度值都可能不一样，以此会产生<font color=\"#D37885\"> 循环遮挡</font>的情况。</li>\n<li>为了规避上面的问题，常常会把大的模型分割成小的几块，这样即使出现渲染错误，也不会出现太出格的结果。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Unity设置的渲染序列\">Unity设置的渲染序列<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#Unity设置的渲染序列\"></a></h3><p>类似之前<code>Tags { &quot;RenderType&quot;=&quot;Opaque&quot; }</code>,我们可以用Queue标签来决定我们的模型是怎么渲染的。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">队列名称</th>\n<th style=\"text-align:center\">队列索引</th>\n<th style=\"text-align:center\">索引描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Background</td>\n<td style=\"text-align:center\">1000</td>\n<td style=\"text-align:center\">最早被渲染的队列，一般绘制背景元素</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Geometry</td>\n<td style=\"text-align:center\">2000</td>\n<td style=\"text-align:center\">默认渲染队列，不透明物体渲染队列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AlphaTest</td>\n<td style=\"text-align:center\">2450</td>\n<td style=\"text-align:center\">需要透明度测试的物体在这个队列渲染</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Transparent</td>\n<td style=\"text-align:center\">3000</td>\n<td style=\"text-align:center\">使用透明度混合的物体在这个队列渲染</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Overlay</td>\n<td style=\"text-align:center\">4000</td>\n<td style=\"text-align:center\">最后被渲染的物体在这个队列，一般用于叠加效果</td>\n</tr>\n</tbody>\n</table></div></div>\n<h3 id=\"代码设置\">代码设置<a href=\"post/Unity Shader 入门（四）：透明效果知识储备#代码设置\"></a></h3><p>如果我们想要通过透明度混合来实现半透明效果，代码如下</p>\n<pre class=\" language-haxe\"><code class=\"language-haxe\"> SubShader\n    <span class=\"token punctuation\">{</span>\n        Tags <span class=\"token punctuation\">{</span> <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token punctuation\">}</span>  \n        Pass <span class=\"token punctuation\">{</span> \n            ZWrite Off ······\n        <span class=\"token punctuation\">}</span> \n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>ZWrite Off 意味者关闭深度写入，或者可以：</p>\n<pre class=\" language-haxe\"><code class=\"language-haxe\"> SubShader\n    <span class=\"token punctuation\">{</span>\n        Tags <span class=\"token punctuation\">{</span> <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token punctuation\">}</span>  \n        ZWrite Off ······\n        Pass <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span> \n    <span class=\"token punctuation\">}</span>\n</code></pre>\n<p>这样表示这个SubShader下的所有Pass都会关闭深度写入</p>\n","prev":{"title":"Unity Shader 入门（五）：边缘发光透明版","slug":"Unity Shader 入门（五）：边缘发光透明版"},"next":{"title":"Unity Shader 入门（三）：编写第一个Shader","slug":"Unity Shader 入门（三）：编写第一个Shader"},"link":"http://yoursite.com/post/Unity Shader 入门（四）：透明效果知识储备/","toc":[{"title":"导语","id":"导语","index":"1","children":[{"title":"深度缓冲","id":"深度缓冲","index":"1.1"}]},{"title":"透明效果","id":"透明效果","index":"2","children":[{"title":"透明度混合","id":"透明度混合","index":"2.1"},{"title":"渲染顺序","id":"渲染顺序","index":"2.2"},{"title":"Unity设置的渲染序列","id":"Unity设置的渲染序列","index":"2.3"},{"title":"代码设置","id":"代码设置","index":"2.4"}]}]}