{"title":"Unity Shader 入门（五）：边缘发光透明版","date":"2017-11-24T16:00:00.000Z","thumbnail":"https://github.com/kurong00/blog/blob/master/thumbnail/shader5/shader5.png?raw=true","slug":"Unity Shader 入门（五）：边缘发光透明版","categories":["Shader"],"updated":"2019-05-01T01:49:24.177Z","content":"<h2 id=\"导语\">导语<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#导语\"></a></h2><p>之前我们写过一个边缘发光的Shader（<a href=\"http://chenwenling.cn/2017/11/13/Unity%20Shader%20%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAShader/\" target=\"_blank\" rel=\"noopener\">传送门</a>），这一次我们来写这个的升级版：透明物体的边缘发光。</p>\n<h2 id=\"效果图\">效果图<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#效果图\"></a></h2><p>首先我们还是来看一下效果图：<br><img src=\"https://github.com/kurong00/blog/blob/master/thumbnail/shader5/RimEnerge.PNG?raw=true\" alt></p>\n<h2 id=\"Shader代码\">Shader代码<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#Shader代码\"></a></h2><pre class=\" language-haxe\"><code class=\"language-haxe\">Shader <span class=\"token string\">\"Custom/Rim/RimEnerge\"</span> <span class=\"token punctuation\">{</span>\n    Properties\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">_Color</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Main Color\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">_AlphaRange</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Alpha Range\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">Range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token function\">_RimColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Rim Color\"</span><span class=\"token punctuation\">,</span>Color<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    SubShader\n    <span class=\"token punctuation\">{</span>\n        Tags<span class=\"token punctuation\">{</span> \n            <span class=\"token string\">\"Queue\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span>\n            <span class=\"token string\">\"IgnoreProjector\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span>\n            <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token punctuation\">}</span>    \n        ZWrite Off \n        Blend SrcAlpha OneMinusSrcAlpha \n        LOD <span class=\"token number\">200</span>         \n\n        Pass\n        <span class=\"token punctuation\">{</span>\n            CGPROGRAM\n            <span class=\"token preprocessor builtin\">#pragma</span> vertex vert\n            <span class=\"token preprocessor builtin\">#pragma</span> fragment frag\n            <span class=\"token preprocessor builtin\">#include</span> <span class=\"token string\">\"Lighting.cginc\"</span>      \n\n            struct a2v\n            <span class=\"token punctuation\">{</span>\n                float4 vertex <span class=\"token punctuation\">:</span> POSITION<span class=\"token punctuation\">;</span>\n                float3 normal <span class=\"token punctuation\">:</span> NORMAL<span class=\"token punctuation\">;</span>             \n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            struct v2f\n            <span class=\"token punctuation\">{</span>\n                float4 pos <span class=\"token punctuation\">:</span> SV_POSITION<span class=\"token punctuation\">;</span>\n                float3 normalDir <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span>\n                float3 worldPos <span class=\"token punctuation\">:</span> TEXCOORD1<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            fixed4 _Color<span class=\"token punctuation\">;</span>\n            float _AlphaRange<span class=\"token punctuation\">;</span>\n            fixed4 _RimColor<span class=\"token punctuation\">;</span>\n\n            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span> a2v v <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                v2f o<span class=\"token punctuation\">;</span>\n                o<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n                o<span class=\"token punctuation\">.</span>normalDir <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToWorldNormal</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n                o<span class=\"token punctuation\">.</span>worldPos <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>unity_ObjectToWorld<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span> v2f v <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>COLOR\n            <span class=\"token punctuation\">{</span>\n                float3 normal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normalDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                float3 viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>_WorldSpaceCameraPos <span class=\"token operator\">-</span> v<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                float normalDotViewDir <span class=\"token operator\">=</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span>viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                fixed3 diffuse <span class=\"token operator\">=</span> normalDotViewDir <span class=\"token operator\">*</span>_Color<span class=\"token punctuation\">;</span>  \n                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span>diffuse <span class=\"token operator\">+</span> _RimColor <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> normalDotViewDir<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> _AlphaRange<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> _AlphaRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            ENDCG\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    Fallback <span class=\"token string\">\"Diffuse\"</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"透明度混合\">透明度混合<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#透明度混合\"></a></h2><p>上一篇我们了解了透明度混合的原理以及一些透明度知识（<a href=\"http://chenwenling.cn/2017/11/18/Unity%20Shader%20%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C%E7%9F%A5%E8%AF%86%E5%82%A8%E5%A4%87/\" target=\"_blank\" rel=\"noopener\">传送门</a>），而Unity中，为了进行透明度混合，我们需要用到【Blend】命令： </p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">语法</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Blend Off</td>\n<td style=\"text-align:center\">关闭混合（这是默认的状态）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Blend SrcFactor DstFactor</td>\n<td style=\"text-align:center\">开启混合，该片元产生的颜色<em>SrcFactor. 已存在于屏幕的颜色 </em>DstFactor，然后将两者叠加在一起存入颜色缓冲。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Blend SrcFactor DstFactor, SrcFactorA DstFactorA</td>\n<td style=\"text-align:center\">原理同上，不过使用了不同的混合因子</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">BlendOp Op</td>\n<td style=\"text-align:center\">不同于上面的颜色混合，而是使用Blend Operation（<a href=\"https://docs.unity3d.com/Manual/SL-Blend.html\" target=\"_blank\" rel=\"noopener\">传送门</a>）来对它们进行操作</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">BlendOp OpColor, OpAlpha</td>\n<td style=\"text-align:center\">原理同上，不过采用不同的Blend Operation来操作Color和Alpha的通道</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>混合因子：</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">One</td>\n<td style=\"text-align:center\">因子为1，表示让源颜色或者目标颜色通过</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Zero</td>\n<td style=\"text-align:center\">因子为0，用来删除源颜色或者目标颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SrcColor</td>\n<td style=\"text-align:center\">因子为源颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SrcAlpha</td>\n<td style=\"text-align:center\">因子为源颜色的透明度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DstColor</td>\n<td style=\"text-align:center\">因子为目标颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DstAlpha</td>\n<td style=\"text-align:center\">因子为目标颜色的透明度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OneMinusSrcColor</td>\n<td style=\"text-align:center\">因子为 (1 - 源颜色) 的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OneMinusSrcAlpha</td>\n<td style=\"text-align:center\">因子为 (1 - 源颜色的透明度) 的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OneMinusDstColor</td>\n<td style=\"text-align:center\">因子为 (1 - 目标颜色) 的值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OneMinusDstAlpha</td>\n<td style=\"text-align:center\">因子为 (1 - 目标颜色的透明度) 的值</td>\n</tr>\n</tbody>\n</table></div></div>\n<p>此时我们再来看上面这一块代码：</p>\n<pre class=\" language-haxe\"><code class=\"language-haxe\">Tags<span class=\"token punctuation\">{</span> \n        <span class=\"token string\">\"Queue\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span>\n        <span class=\"token string\">\"IgnoreProjector\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span>\n        <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span> <span class=\"token punctuation\">}</span>    \n        ZWrite Off \n        Blend SrcAlpha OneMinusSrcAlpha \n        LOD <span class=\"token number\">200</span>    \n</code></pre>\n<ul>\n<li>这里有一些新的知识：之前提过半透明物体的渲染序列要设置成<code>&quot;Queue&quot;=&quot;Transparent&quot;</code>,而<code>&quot;RenderType&quot;=&quot;Transparent&quot;</code>表示我们使用了透明度混合。通常一个半透明的Shader Tags都包含这三条：<pre class=\" language-haxe\"><code class=\"language-haxe\">      <span class=\"token string\">\"Queue\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span>\n      <span class=\"token string\">\"IgnoreProjector\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"True\"</span>\n      <span class=\"token string\">\"RenderType\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"Transparent\"</span>\n</code></pre>\n</li>\n<li>接下来是  <code>ZWrite Off</code> : 我们在上一篇介绍过为什么透明度混合需要关闭深度写入</li>\n<li>最后是  <code>Blend SrcAlpha OneMinusSrcAlpha</code> : 这里我们将源颜色的混合因子设置成<code>SrcAlpha</code>，将目标颜色的混合因子设置成 <code>OneMinusSrcAlpha</code> 以得到半透明效果。</li>\n</ul>\n<h2 id=\"结构体定义\">结构体定义<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#结构体定义\"></a></h2><pre class=\" language-haxe\"><code class=\"language-haxe\">            struct a2v\n            <span class=\"token punctuation\">{</span>\n                float4 vertex <span class=\"token punctuation\">:</span> POSITION<span class=\"token punctuation\">;</span>\n                float3 normal <span class=\"token punctuation\">:</span> NORMAL<span class=\"token punctuation\">;</span>             \n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n            struct v2f\n            <span class=\"token punctuation\">{</span>\n                float4 pos <span class=\"token punctuation\">:</span> SV_POSITION<span class=\"token punctuation\">;</span>\n                float3 normalDir <span class=\"token punctuation\">:</span> TEXCOORD0<span class=\"token punctuation\">;</span>\n                float3 worldPos <span class=\"token punctuation\">:</span> TEXCOORD1<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"a2v-：包含顶点着色器要的模型数据\">a2v ：包含顶点着色器要的模型数据<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#a2v-：包含顶点着色器要的模型数据\"></a></h3><ul>\n<li><code>float4 vertex : POSITION;</code>这一句表示：用模型顶点的坐标填充vertex变量。 </li>\n<li><code>float3 normal : NORMAL;</code> 这一句表示：用模型空间的法线方向向量填充normal变量</li>\n</ul>\n<h3 id=\"v2f-：用于顶点着色器和片元着色器之间传递信息\">v2f ：用于顶点着色器和片元着色器之间传递信息<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#v2f-：用于顶点着色器和片元着色器之间传递信息\"></a></h3><ul>\n<li><code>float4 pos : SV_POSITION;</code>这一句表示：用裁剪空间的位置信息填充pos变量</li>\n<li><code>float3 normalDir : TEXCOORD0;</code>这一句表示：用模型的第一套纹理坐标填充normalDir变量</li>\n<li><code>float3 worldPos : TEXCOORD1;</code>这一句表示：用模型的第二套纹理坐标填充worldPos变量</li>\n</ul>\n<h2 id=\"顶点着色器\">顶点着色器<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#顶点着色器\"></a></h2><pre class=\" language-haxe\"><code class=\"language-haxe\">            v2f <span class=\"token function\">vert</span><span class=\"token punctuation\">(</span> a2v v <span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                v2f o<span class=\"token punctuation\">;</span>\n                o<span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToClipPos</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                o<span class=\"token punctuation\">.</span>normalDir <span class=\"token operator\">=</span> <span class=\"token function\">UnityObjectToWorldNormal</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n                o<span class=\"token punctuation\">.</span>worldPos <span class=\"token operator\">=</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>unity_ObjectToWorld<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xyz<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> o<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li><code>UnityObjectToClipPos(v.vertex)</code>是Unity5.6之后的写法，之前是<code>mul(UNITY_MATRIX_MVP,v.vertex)</code> 这一句的意思是:将模型空间的顶点信息转换到裁剪空间中的位置信息，然后将信息存储在o.pos中。</li>\n<li><code>UnityObjectToWorldNormal(v.normal)</code>这一句的意思是:法线从模型空间变换到世界空间中并计算物体在世界空间中的法线坐标。</li>\n<li><code>mul(unity_ObjectToWorld,v.vertex).xyz;</code>这一句的意思是：将顶点从模型空间转换到世界空间的信息存储到worldPos变量中。</li>\n</ul>\n<h2 id=\"片元着色器\">片元着色器<a href=\"post/Unity Shader 入门（五）：边缘发光透明版#片元着色器\"></a></h2><pre class=\" language-haxe\"><code class=\"language-haxe\">            fixed4 <span class=\"token function\">frag</span><span class=\"token punctuation\">(</span> v2f v <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>COLOR\n            <span class=\"token punctuation\">{</span>\n                float3 normal <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>normalDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                float3 viewDir <span class=\"token operator\">=</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>_WorldSpaceCameraPos <span class=\"token operator\">-</span> v<span class=\"token punctuation\">.</span>worldPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                float normalDotViewDir <span class=\"token operator\">=</span> <span class=\"token function\">saturate</span><span class=\"token punctuation\">(</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">,</span>viewDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                fixed3 diffuse <span class=\"token operator\">=</span> normalDotViewDir <span class=\"token operator\">*</span>_Color<span class=\"token punctuation\">;</span>  \n                <span class=\"token keyword\">return</span> <span class=\"token function\">fixed4</span><span class=\"token punctuation\">(</span>diffuse <span class=\"token operator\">+</span> _RimColor <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> normalDotViewDir<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> _AlphaRange<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> _AlphaRange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n</code></pre>\n<ul>\n<li><code>fixed4 frag( v2f v ):COLOR</code>  我们注意到片元着色器的后面跟着<code>:COLOR</code> ：这是Unity提供的Cg/HLSL语义。语义可以告诉shader数据的来源以及数据的输出。</li>\n<li><code>float3 viewDir = normalize(_WorldSpaceCameraPos - v.worldPos);</code> 这里我们用<code>对象在世界坐标系中的位置</code>减去<code>摄像机的世界空间位置</code>，并进行逐顶点归一化，赋给视线的方向</li>\n<li><code>float normalDotViewDir = saturate(dot(normal,viewDir))</code> 我们获得法线与视线的夹角</li>\n<li><code>fixed3 diffuse = normalDotViewDir *_Color;</code> 这里我们视线与法线的夹角和主颜色相乘。</li>\n<li><code>return fixed4(diffuse + _RimColor ,(1 - normalDotViewDir) * (1 - _AlphaRange) + _AlphaRange);</code> 最后将混合后的颜色输出。</li>\n</ul>\n","prev":{"title":"Unity Shader 入门（六）：模型描边Shader","slug":"Unity Shader 入门（六）：模型描边Shader"},"next":{"title":"Unity Shader 入门（四）：透明效果知识储备","slug":"Unity Shader 入门（四）：透明效果知识储备"},"link":"http://yoursite.com/post/Unity Shader 入门（五）：边缘发光透明版/","toc":[{"title":"导语","id":"导语","index":"1"},{"title":"效果图","id":"效果图","index":"2"},{"title":"Shader代码","id":"Shader代码","index":"3"},{"title":"透明度混合","id":"透明度混合","index":"4"},{"title":"结构体定义","id":"结构体定义","index":"5","children":[{"title":"a2v ：包含顶点着色器要的模型数据","id":"a2v-：包含顶点着色器要的模型数据","index":"5.1"},{"title":"v2f ：用于顶点着色器和片元着色器之间传递信息","id":"v2f-：用于顶点着色器和片元着色器之间传递信息","index":"5.2"}]},{"title":"顶点着色器","id":"顶点着色器","index":"6"},{"title":"片元着色器","id":"片元着色器","index":"7"}]}